package verso.representation.cubeLandscape.linkInterface;

import java.awt.Color;
import java.util.Iterator;

import javax.swing.JColorChooser;
import javax.swing.JSlider;

import verso.representation.cubeLandscape.SceneLandscape;
import verso.representation.cubeLandscape.representationModel.SystemRepresentation;
import verso.representation.cubeLandscape.representationModel.link.NodeRepresentation;

public class NodesControlPanel extends SysRepControlPanel {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private SceneLandscape sc;
	
	private int levelHeightPrecision = 1000;
//	private int packageNodeSizePrecision = 1000;
//	private int elementsNodeSizePrecision = 1000;
//	private int nodesEntityLinkPrecision = 1000;
	
    /** Creates new form NodesControlPanel */
    public NodesControlPanel(SceneLandscape sc, SystemRepresentation currSysRep) {
        super(currSysRep);
    	initComponents();
        
        this.sc = sc;
        this.currSysRep = currSysRep;
    }

    
    
    public SceneLandscape getSc() {
    	return this.sc;
    }
    
    public void setSc(SceneLandscape sc) {
    	this.sc = sc;
    }
    
    
    
    
    
    //Méthodes pour obetnir les sliders
    public JSlider getLevelHeightSlider() {
    	return this.jslLevelHeight;
    }
    
    public JSlider getPackagesNodesSizeSlider() {
    	return this.jslPackagesNodesSize;
    }
    
    public JSlider getElementsNodesSizeSlider() {
    	return this.jslElementsNodesSize;
    }
    //****************************************************
    
    
    //Méthodes pour afficher/cacher les noeuds
    public boolean getDisplayPackagesNodes() {
    	return this.jchbDisplayPackagesNodes.isSelected();
    }
    
    public void setDisplayPackagesNodes(boolean displayValue) {
    	this.jchbDisplayPackagesNodes.setSelected(displayValue);
    }
    
    public boolean getDisplayElementsNodes() {
    	return this.jchbDisplayElementsNodes.isSelected();
    }
    
    public void setDisplayElementsNodes(boolean displayValue) {
    	this.jchbDisplayElementsNodes.setSelected(displayValue);
    }
  //*********************************************************
    
    
    //Méthodes pour afficher/cacher les liens entres les noeuds et leur entité
    public boolean getDisplayPackagesNodesEntityLink() {
    	return this.jchbDisplayPackagesNodesLinks.isSelected();
    }
    
    public void setDisplayPackagesNodesEntityLink(boolean displayValue) {
    	this.jchbDisplayPackagesNodesLinks.setSelected(displayValue);
    }
    
    public boolean getDisplayElementsNodesEntityLink() {
    	return this.jchbDisplayElementsNodesLinks.isSelected();
    }
    
    public void setDisplayElementsNodesEntityLink(boolean displayValue) {
    	this.jchbDisplayElementsNodesLinks.setSelected(displayValue);
    }
  //*************************************************************************
    
    
    //Méthodes pour changer la couleur des noeuds des packages
    public Color getPackagesNodesColorDisplay() {
    	return this.jlblPackagesNodesColorDisplay.getBackground();
    }
    
    public void setPackagesNodesColorDisplay(Color packagesNodesColor) {
    	this.jlblPackagesNodesColorDisplay.setBackground(packagesNodesColor);
    }
    //*********************************************************
    
    
    
    //Méthodes d'accès pour modifier la position des noeuds des classes/interfaces
    public boolean getElementsNodesStandardPosition() {
    	return this.jrbElementsNodesStandardPosition.isSelected();
    }
    
    public void selectElementsNodesStandardPosition() {
    	this.jrbElementsNodesStandardPosition.setSelected(true);
    }
    
    public boolean getElementsNodesForceFirstLevel() {
    	return this.jrbElementsNodesForceFirstLevel.isSelected();
    }
    
    public void selectElementsNodesForceFirstLevel() {
    	this.jrbElementsNodesForceFirstLevel.setSelected(true);
    }
    
    public boolean getElementsNodesOnClass() {
    	return this.jrbElementsNodesOnClass.isSelected();
    }
    
    public void selectElementsNodesOnClass() {
    	this.jrbElementsNodesOnClass.setSelected(true);
    }
    //*****************************************************************************
    
    
    
    
    
    
    
    
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgElementsNodesPosition = new javax.swing.ButtonGroup();
        jpElementsNodesPosition = new javax.swing.JPanel();
        jchbDisplayElementsNodesLinks = new javax.swing.JCheckBox();
        jchbDisplayPackagesNodesLinks = new javax.swing.JCheckBox();
        jlblNodesLinkMesh = new javax.swing.JLabel();
        jcbNodesLinkMesh = new javax.swing.JComboBox<String>();
        jlblLinkMeshSize = new javax.swing.JLabel();
        jslLinkMeshSize = new javax.swing.JSlider();
        jpDisplayNodes = new javax.swing.JPanel();
        jlblPackagesNodes = new javax.swing.JLabel();
        jlblPackagesNodesColorDisplay = new javax.swing.JLabel();
        jchbDisplayPackagesNodes = new javax.swing.JCheckBox();
        jchbDisplayElementsNodes = new javax.swing.JCheckBox();
        jlblElementsNodesPosition = new javax.swing.JLabel();
        jrbElementsNodesForceFirstLevel = new javax.swing.JRadioButton();
        jrbElementsNodesStandardPosition = new javax.swing.JRadioButton();
        jrbElementsNodesOnClass = new javax.swing.JRadioButton();
        jpNodesSize = new javax.swing.JPanel();
        jlblLevelHeight = new javax.swing.JLabel();
        jlblPackagesNodesSize = new javax.swing.JLabel();
        jslPackagesNodesSize = new javax.swing.JSlider();
        jlblElementsNodesSize = new javax.swing.JLabel();
        jslElementsNodesSize = new javax.swing.JSlider();
        jlblPackagesNodesMesh = new javax.swing.JLabel();
        jcbPackagesNodesMesh = new javax.swing.JComboBox<String>();
        jlblElementsNodesMesh = new javax.swing.JLabel();
        jcElementsNodesMesh = new javax.swing.JComboBox<String>();
        jslLevelHeight = new javax.swing.JSlider();

        setBackground(new java.awt.Color(255, 255, 255));

        jpElementsNodesPosition.setBackground(new java.awt.Color(255, 255, 255));
        jpElementsNodesPosition.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jchbDisplayElementsNodesLinks.setBackground(new java.awt.Color(255, 255, 255));
        jchbDisplayElementsNodesLinks.setFont(new java.awt.Font("Tahoma", 1, 12));
        jchbDisplayElementsNodesLinks.setText("Afficher liens entres noeuds et classes/interfaces");
        jchbDisplayElementsNodesLinks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchbDisplayElementsNodesLinksActionPerformed(evt);
            }
        });

        jchbDisplayPackagesNodesLinks.setBackground(new java.awt.Color(255, 255, 255));
        jchbDisplayPackagesNodesLinks.setFont(new java.awt.Font("Tahoma", 1, 12));
        jchbDisplayPackagesNodesLinks.setText("Afficher liens entres noeuds et packages");
        jchbDisplayPackagesNodesLinks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchbDisplayPackagesNodesLinksActionPerformed(evt);
            }
        });

        jlblNodesLinkMesh.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlblNodesLinkMesh.setText("Afficher les liens avec :");

        jcbNodesLinkMesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNodesLinkMeshActionPerformed(evt);
            }
        });

        jlblLinkMeshSize.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlblLinkMeshSize.setText("Taille des liens :");

        jslLinkMeshSize.setBackground(new java.awt.Color(255, 255, 255));
        jslLinkMeshSize.setMaximum(1000);
        jslLinkMeshSize.setMinimum(10);
        jslLinkMeshSize.setOrientation(javax.swing.JSlider.VERTICAL);
        jslLinkMeshSize.setPaintTicks(true);
        jslLinkMeshSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jslLinkMeshSizeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jslLinkMeshSizeMouseReleased(evt);
            }
        });
        jslLinkMeshSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslLinkMeshSizeStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpElementsNodesPositionLayout = new javax.swing.GroupLayout(jpElementsNodesPosition);
        jpElementsNodesPosition.setLayout(jpElementsNodesPositionLayout);
        jpElementsNodesPositionLayout.setHorizontalGroup(
            jpElementsNodesPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpElementsNodesPositionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpElementsNodesPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jchbDisplayElementsNodesLinks)
                    .addGroup(jpElementsNodesPositionLayout.createSequentialGroup()
                        .addGroup(jpElementsNodesPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jchbDisplayPackagesNodesLinks)
                            .addGroup(jpElementsNodesPositionLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jlblNodesLinkMesh)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcbNodesLinkMesh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlblLinkMeshSize)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jslLinkMeshSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jpElementsNodesPositionLayout.setVerticalGroup(
            jpElementsNodesPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpElementsNodesPositionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jchbDisplayElementsNodesLinks)
                .addGroup(jpElementsNodesPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpElementsNodesPositionLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jchbDisplayPackagesNodesLinks)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpElementsNodesPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblNodesLinkMesh)
                            .addComponent(jcbNodesLinkMesh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblLinkMeshSize, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpElementsNodesPositionLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jslLinkMeshSize, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jpDisplayNodes.setBackground(new java.awt.Color(255, 255, 255));
        jpDisplayNodes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlblPackagesNodes.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlblPackagesNodes.setText("Couleur noeuds packages :");

        jlblPackagesNodesColorDisplay.setBackground(new java.awt.Color(204, 0, 204));
        jlblPackagesNodesColorDisplay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlblPackagesNodesColorDisplay.setOpaque(true);
        jlblPackagesNodesColorDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlblPackagesNodesColorDisplayMouseClicked(evt);
            }
        });

        jchbDisplayPackagesNodes.setBackground(new java.awt.Color(255, 255, 255));
        jchbDisplayPackagesNodes.setFont(new java.awt.Font("Tahoma", 1, 12));
        jchbDisplayPackagesNodes.setSelected(true);
        jchbDisplayPackagesNodes.setText("Afficher les noeuds des packages");
        jchbDisplayPackagesNodes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchbDisplayPackagesNodesActionPerformed(evt);
            }
        });

        jchbDisplayElementsNodes.setBackground(new java.awt.Color(255, 255, 255));
        jchbDisplayElementsNodes.setFont(new java.awt.Font("Tahoma", 1, 12));
        jchbDisplayElementsNodes.setSelected(true);
        jchbDisplayElementsNodes.setText("Afficher les noeuds des classes/interfaces");
        jchbDisplayElementsNodes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchbDisplayElementsNodesActionPerformed(evt);
            }
        });

        jlblElementsNodesPosition.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlblElementsNodesPosition.setText("Positions noeuds classes/interfaces :");

        jrbElementsNodesForceFirstLevel.setBackground(new java.awt.Color(255, 255, 255));
        bgElementsNodesPosition.add(jrbElementsNodesForceFirstLevel);
        jrbElementsNodesForceFirstLevel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbElementsNodesForceFirstLevel.setText("Forcer premier niveau");
        jrbElementsNodesForceFirstLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbElementsNodesForceFirstLevelActionPerformed(evt);
            }
        });

        jrbElementsNodesStandardPosition.setBackground(new java.awt.Color(255, 255, 255));
        bgElementsNodesPosition.add(jrbElementsNodesStandardPosition);
        jrbElementsNodesStandardPosition.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbElementsNodesStandardPosition.setSelected(true);
        jrbElementsNodesStandardPosition.setText("Niveau standard");
        jrbElementsNodesStandardPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbElementsNodesStandardPositionActionPerformed(evt);
            }
        });

        jrbElementsNodesOnClass.setBackground(new java.awt.Color(255, 255, 255));
        bgElementsNodesPosition.add(jrbElementsNodesOnClass);
        jrbElementsNodesOnClass.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbElementsNodesOnClass.setText("Sur les classes");
        jrbElementsNodesOnClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbElementsNodesOnClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpDisplayNodesLayout = new javax.swing.GroupLayout(jpDisplayNodes);
        jpDisplayNodes.setLayout(jpDisplayNodesLayout);
        jpDisplayNodesLayout.setHorizontalGroup(
            jpDisplayNodesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDisplayNodesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDisplayNodesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDisplayNodesLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jpDisplayNodesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblElementsNodesPosition)
                            .addComponent(jrbElementsNodesForceFirstLevel)
                            .addComponent(jrbElementsNodesStandardPosition)
                            .addComponent(jrbElementsNodesOnClass)
                            .addGroup(jpDisplayNodesLayout.createSequentialGroup()
                                .addComponent(jlblPackagesNodes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlblPackagesNodesColorDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jchbDisplayElementsNodes)
                    .addComponent(jchbDisplayPackagesNodes))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jpDisplayNodesLayout.setVerticalGroup(
            jpDisplayNodesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDisplayNodesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jchbDisplayPackagesNodes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jchbDisplayElementsNodes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDisplayNodesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblPackagesNodesColorDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblPackagesNodes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlblElementsNodesPosition)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbElementsNodesStandardPosition)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbElementsNodesForceFirstLevel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbElementsNodesOnClass)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpNodesSize.setBackground(new java.awt.Color(255, 255, 255));
        jpNodesSize.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlblLevelHeight.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlblLevelHeight.setText("Distance par niveau :");

        jlblPackagesNodesSize.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlblPackagesNodesSize.setText("Taille noeuds package :");

        jslPackagesNodesSize.setBackground(new java.awt.Color(255, 255, 255));
        jslPackagesNodesSize.setMaximum(1000);
        jslPackagesNodesSize.setMinimum(10);
        jslPackagesNodesSize.setOrientation(javax.swing.JSlider.VERTICAL);
        jslPackagesNodesSize.setPaintTicks(true);
        jslPackagesNodesSize.setValue(250);
        jslPackagesNodesSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jslPackagesNodesSizeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jslPackagesNodesSizeMouseReleased(evt);
            }
        });
        jslPackagesNodesSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslPackagesNodesSizeStateChanged(evt);
            }
        });

        jlblElementsNodesSize.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlblElementsNodesSize.setText("Taille noeuds classes/interfaces :");

        jslElementsNodesSize.setBackground(new java.awt.Color(255, 255, 255));
        jslElementsNodesSize.setMaximum(1000);
        jslElementsNodesSize.setMinimum(10);
        jslElementsNodesSize.setOrientation(javax.swing.JSlider.VERTICAL);
        jslElementsNodesSize.setPaintTicks(true);
        jslElementsNodesSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jslElementsNodesSizeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jslElementsNodesSizeMouseReleased(evt);
            }
        });
        jslElementsNodesSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslElementsNodesSizeStateChanged(evt);
            }
        });

        jlblPackagesNodesMesh.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlblPackagesNodesMesh.setText("Afficher noeuds packages avec :");

        jcbPackagesNodesMesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPackagesNodesMeshActionPerformed(evt);
            }
        });

        jlblElementsNodesMesh.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlblElementsNodesMesh.setText("Afficher noeuds classes/interfaces avec :");

        jcElementsNodesMesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcElementsNodesMeshActionPerformed(evt);
            }
        });

        jslLevelHeight.setBackground(new java.awt.Color(255, 255, 255));
        jslLevelHeight.setMaximum(15000);
        jslLevelHeight.setMinimum(100);
        jslLevelHeight.setOrientation(javax.swing.JSlider.VERTICAL);
        jslLevelHeight.setPaintTicks(true);
        jslLevelHeight.setValue(2000);
        jslLevelHeight.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jslLevelHeightMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jslLevelHeightMouseReleased(evt);
            }
        });
        jslLevelHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslLevelHeightStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpNodesSizeLayout = new javax.swing.GroupLayout(jpNodesSize);
        jpNodesSize.setLayout(jpNodesSizeLayout);
        jpNodesSizeLayout.setHorizontalGroup(
            jpNodesSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNodesSizeLayout.createSequentialGroup()
                .addComponent(jlblLevelHeight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jslLevelHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jlblPackagesNodesSize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jslPackagesNodesSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblElementsNodesSize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jslElementsNodesSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jpNodesSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpNodesSizeLayout.createSequentialGroup()
                        .addComponent(jlblPackagesNodesMesh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbPackagesNodesMesh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpNodesSizeLayout.createSequentialGroup()
                        .addComponent(jlblElementsNodesMesh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcElementsNodesMesh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpNodesSizeLayout.setVerticalGroup(
            jpNodesSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNodesSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpNodesSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jslElementsNodesSize, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpNodesSizeLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jpNodesSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblPackagesNodesMesh)
                            .addComponent(jcbPackagesNodesMesh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpNodesSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblElementsNodesMesh)
                            .addComponent(jcElementsNodesMesh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jlblElementsNodesSize)
                    .addComponent(jlblPackagesNodesSize)
                    .addComponent(jslLevelHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jslPackagesNodesSize, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblLevelHeight))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpNodesSize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpDisplayNodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpElementsNodesPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpNodesSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpElementsNodesPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpDisplayNodes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jchbDisplayElementsNodesLinksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchbDisplayElementsNodesLinksActionPerformed
    }

    private void jchbDisplayPackagesNodesLinksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchbDisplayPackagesNodesLinksActionPerformed
    }

    private void jcbNodesLinkMeshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNodesLinkMeshActionPerformed
        // TODO add your handling code here:
    }

    private void jslLinkMeshSizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jslLinkMeshSizeMousePressed
        // TODO add your handling code here:
    }

    private void jslLinkMeshSizeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jslLinkMeshSizeMouseReleased
        // TODO add your handling code here:
    }

    private void jslLinkMeshSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslLinkMeshSizeStateChanged
        // TODO add your handling code here:
    }

    private void jlblPackagesNodesColorDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblPackagesNodesColorDisplayMouColorcked
    	JColorChooser colorChooser = new JColorChooser();
    	colorChooser.setLocation(this.jlblPackagesNodesColorDisplay.getX(), this.jlblPackagesNodesColorDisplay.getY());
    	Color packagesNodesColor = JColorChooser.showDialog(this, "Couleurs noeuds packages", this.jlblPackagesNodesColorDisplay.getBackground());
    	
    	if (packagesNodesColor != null) { 		
        	this.jlblPackagesNodesColorDisplay.setBackground(packagesNodesColor);
	        
        	Iterator<NodeRepresentation> packagesNodesItr = this.currSysRep.getPackagesNodes().iterator();
	        while (packagesNodesItr.hasNext()) {
	        	packagesNodesItr.next().setColor(packagesNodesColor);
	        }
	        
	        this.sc.refreshScene();
    	}
    }

    private void jchbDisplayPackagesNodesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchbDisplayPackagesNodesActionPerformed
        /*
    	this.currSysRep.setDisplayPackagesNodes(this.jchbDisplayPackagesNodes.isSelected());
        this.sc.refreshScene();
        */
    }

    private void jchbDisplayElementsNodesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchbDisplayElementsNodesActionPerformed
        /*
    	this.currSysRep.setDisplayElementsNodes(this.jchbDisplayElementsNodes.isSelected());
        this.sc.refreshScene();
        */
    }

    private void jrbElementsNodesStandardPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbElementsNodesStandardPositionActionPerformed
        this.currSysRep.setElementsLevelType(0);
    	this.currSysRep.changeLevelHeight((float)this.jslLevelHeight.getValue() / (float)this.levelHeightPrecision);
        this.sc.refreshScene();
    }

    private void jrbElementsNodesForceFirstLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbElementsNodesForceFirstLevelActionPerformed
        this.currSysRep.setElementsLevelType(1);
    	this.currSysRep.forceFirstLevel();
        this.sc.refreshScene();
    }
    
    private void jrbElementsNodesOnClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbElementsNodesOnClassActionPerformed
        this.currSysRep.setElementsLevelType(2);
    	this.currSysRep.elementsNodesOnClass();
        this.sc.refreshScene();
    }

    private void jslPackagesNodesSizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jslPackagesNodesSizeMousePressed
        // TODO add your handling code here:
    }

    private void jslPackagesNodesSizeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jslPackagesNodesSizeMouseReleased
    	float packagesNodesSize = this.jslPackagesNodesSize.getValue()/1000.0f;
        Iterator<NodeRepresentation> packagesNodesItr = this.currSysRep.getPackagesNodes().iterator();
        while (packagesNodesItr.hasNext()) {
        	packagesNodesItr.next().setmeshSize(packagesNodesSize);
        }
        
        this.sc.refreshScene();
    }

    private void jslPackagesNodesSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslPackagesNodesSizeStateChanged
        // TODO add your handling code here:
    }

    private void jslElementsNodesSizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jslElementsNodesSizeMousePressed
        // TODO add your handling code here:
    }

    private void jslElementsNodesSizeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jslElementsNodesSizeMouseReleased
    	float elementsNodesSize = this.jslElementsNodesSize.getValue()/1000.0f;
        Iterator<NodeRepresentation> elementsNodesItr = this.currSysRep.getElementsNodes().iterator();
        while (elementsNodesItr.hasNext()) {
        	elementsNodesItr.next().setmeshSize(elementsNodesSize);
        }
        
        this.sc.refreshScene();
    }

    private void jslElementsNodesSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslElementsNodesSizeStateChanged
        // TODO add your handling code here:
    }

    private void jcbPackagesNodesMeshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPackagesNodesMeshActionPerformed
        // TODO add your handling code here:
    }

    private void jcElementsNodesMeshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcElementsNodesMeshActionPerformed
        // TODO add your handling code here:
    }

    private void jslLevelHeightMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jslLevelHeightMousePressed
    	// TODO add your handling code here:
    }

    private void jslLevelHeightMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jslLevelHeightMouseReleased
        //this.currSysRep.displayRoughEdgeBundles = true;
    	this.currSysRep.changeLevelHeight((float)this.jslLevelHeight.getValue() / (float)this.levelHeightPrecision);
        this.sc.refreshScene();
    }

    private void jslLevelHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslLevelHeightStateChanged
        // TODO add your handling code here:
    }


    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgElementsNodesPosition;
    private javax.swing.JComboBox<String> jcElementsNodesMesh;
    private javax.swing.JComboBox<String> jcbNodesLinkMesh;
    private javax.swing.JComboBox<String> jcbPackagesNodesMesh;
    private javax.swing.JCheckBox jchbDisplayElementsNodes;
    private javax.swing.JCheckBox jchbDisplayElementsNodesLinks;
    private javax.swing.JCheckBox jchbDisplayPackagesNodes;
    private javax.swing.JCheckBox jchbDisplayPackagesNodesLinks;
    private javax.swing.JLabel jlblElementsNodesMesh;
    private javax.swing.JLabel jlblElementsNodesPosition;
    private javax.swing.JLabel jlblElementsNodesSize;
    private javax.swing.JLabel jlblLevelHeight;
    private javax.swing.JLabel jlblLinkMeshSize;
    private javax.swing.JLabel jlblNodesLinkMesh;
    private javax.swing.JLabel jlblPackagesNodes;
    private javax.swing.JLabel jlblPackagesNodesColorDisplay;
    private javax.swing.JLabel jlblPackagesNodesMesh;
    private javax.swing.JLabel jlblPackagesNodesSize;
    private javax.swing.JPanel jpDisplayNodes;
    private javax.swing.JPanel jpElementsNodesPosition;
    private javax.swing.JPanel jpNodesSize;
    private javax.swing.JRadioButton jrbElementsNodesForceFirstLevel;
    private javax.swing.JRadioButton jrbElementsNodesOnClass;
    private javax.swing.JRadioButton jrbElementsNodesStandardPosition;
    private javax.swing.JSlider jslElementsNodesSize;
    private javax.swing.JSlider jslLevelHeight;
    private javax.swing.JSlider jslLinkMeshSize;
    private javax.swing.JSlider jslPackagesNodesSize;
    // End of variables declaration//GEN-END:variables

}
